// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using YeniEmlak.Models;

namespace YeniEmlak.Migrations
{
    [DbContext(typeof(HomeDbContext))]
    partial class HomeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YeniEmlak.DomainModel.AdverType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AdverTypes");
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.Home", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AboutHome");

                    b.Property<string>("Address");

                    b.Property<int>("AdverTypeId");

                    b.Property<int?>("Area");

                    b.Property<int>("BuildingType");

                    b.Property<int>("CityId");

                    b.Property<bool?>("Credit");

                    b.Property<int?>("EstateDocumentType");

                    b.Property<string>("HomeImg");

                    b.Property<int>("HomeTypeId");

                    b.Property<int?>("LandArea");

                    b.Property<decimal>("Price");

                    b.Property<int>("RoomCount");

                    b.Property<int?>("Stair");

                    b.Property<int?>("TotalStairCount");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AdverTypeId");

                    b.HasIndex("CityId");

                    b.HasIndex("HomeTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Homes");
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.HomeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("HomeTypes");
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdUser");

                    b.Property<string>("Number");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("PhoneNumbers");
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdvewOwnerId");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("AdvewOwnerId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("YeniEmlak.Models.DomainModel.AdverOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("AdverOwners");
                });

            modelBuilder.Entity("YeniEmlak.Models.DomainModel.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AreaType");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("YeniEmlak.Models.DomainModel.DependentUI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DivId");

                    b.Property<string>("ParentName");

                    b.Property<string>("SelectName");

                    b.HasKey("Id");

                    b.ToTable("DependentUIs");
                });

            modelBuilder.Entity("YeniEmlak.Models.DomainModel.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("YeniEmlak.Models.DomainModel.EquipmentOfHome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EquipmentId");

                    b.Property<int>("HomeId");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("HomeId");

                    b.ToTable("EquipmentOfHome");
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.Home", b =>
                {
                    b.HasOne("YeniEmlak.DomainModel.AdverType", "AdverType")
                        .WithMany()
                        .HasForeignKey("AdverTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YeniEmlak.Models.DomainModel.City", "City")
                        .WithMany("Homes")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YeniEmlak.DomainModel.HomeType", "HomeType")
                        .WithMany("Homes")
                        .HasForeignKey("HomeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YeniEmlak.DomainModel.User")
                        .WithMany("Homes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.PhoneNumber", b =>
                {
                    b.HasOne("YeniEmlak.DomainModel.User", "User")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YeniEmlak.DomainModel.User", b =>
                {
                    b.HasOne("YeniEmlak.Models.DomainModel.AdverOwner", "AdverOwner")
                        .WithMany("Users")
                        .HasForeignKey("AdvewOwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YeniEmlak.Models.DomainModel.EquipmentOfHome", b =>
                {
                    b.HasOne("YeniEmlak.Models.DomainModel.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YeniEmlak.DomainModel.Home", "Home")
                        .WithMany("Equipments")
                        .HasForeignKey("HomeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
